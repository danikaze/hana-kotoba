$quarterContainerPadding: 5px;

.root {
  height: 100vh;
  width: 100vw;
  display: grid;

  /**
   * The grid accepts several configurations for the 3 panels:
   * - Matrix (m)
   * - Circle (c)
   * - Jisho (j)
   *
   * The grid has 4 spaces abcd being:
   * - a: top-left
   * - b: top-right
   * - c: bottom-left
   * - d: bottom-right
   *
   * So, Matrix in the top-left, Circle in the bottom-left and Jisho in the right
   * would be specified as "mjcj"
   */

  grid-template-columns: 50%;
  grid-template-rows: 50%;
  // default is .mjcj
  grid-template-areas:
    'matrix jisho'
    'circle jisho';

  &.cjmj {
    grid-template-areas:
      'circle jisho'
      'matrix jisho';
  }

  &.jmjc {
    grid-template-areas:
      'jisho matrix'
      'jisho circle';
  }

  &.jcjm {
    grid-template-areas:
      'jisho circle'
      'jisho matrix';
  }

  &.jjmc {
    grid-template-areas:
      'jisho jisho'
      'matrix circle';
  }

  &.mcjj {
    grid-template-areas:
      'matrix circle'
      'jisho jisho';
  }

  &.jjcm {
    grid-template-areas:
      'jisho jisho'
      'circle matrix';
  }

  &.cmjj {
    grid-template-areas:
      'circle matrix'
      'jisho jisho';
  }

  /*
   * Hidden Jisho panel, for mobile devices
   */
  &.ccmm {
    grid-template-areas:
      'circle circle'
      'matrix matrix';
  }
  &.mmcc {
    grid-template-areas:
      'circle circle'
      'matrix matrix';
  }
  &.cmcm {
    grid-template-areas:
      'circle matrix'
      'circle matrix';
  }
  &.mcmc {
    grid-template-areas:
      'matrix circle'
      'matrix circle';
  }
}

.matrix {
  grid-area: matrix;
  background: grey;

  .container {
    display: flex;

    min-width: 170px;
    min-height: 170px;
    width: calc(100% - $quarterContainerPadding * 2);
    height: calc(100% - $quarterContainerPadding * 2);
  }
}

.circle {
  position: relative;
  grid-area: circle;
  background: pink;

  .container {
    aspect-ratio: 1;

    min-width: 170px;
    min-height: 170px;
    height: calc(100% - $quarterContainerPadding * 2);
    max-height: calc(100vw - $quarterContainerPadding * 2);

    &.square {
      @media (max-aspect-ratio: 1) {
        height: auto;
        max-height: inherit;
        width: calc(100% - $quarterContainerPadding * 2);
        max-width: calc(100vh - $quarterContainerPadding * 2);
      }
    }

    &.vertical {
      @media (max-aspect-ratio: 2) {
        height: auto;
        width: calc(100% - $quarterContainerPadding * 2);
      }
    }
  }
}

.jisho {
  grid-area: jisho;
}

.quarter {
  // max-height: calc(50vh - 20px);
  // height: calc(50vh - 20px);
  width: 100%;
  height: 100%;
  overflow: hidden;

  display: flex;
  align-items: center;
  justify-content: center;
}
